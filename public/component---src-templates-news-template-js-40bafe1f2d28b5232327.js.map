{"version":3,"sources":["webpack:///./src/utils/get-related-news.js","webpack:///./src/components/RelatedNews/RelatedNews.js","webpack:///./src/templates/news-template.js","webpack:///./src/components/Page/Page.module.scss","webpack:///./src/components/Page/Page.js","webpack:///./node_modules/lodash/filter.js","webpack:///./node_modules/lodash/_baseFilter.js"],"names":["getRelatedNews","currentId","currentTags","allNews","filter","post","node","id","identityMap","hasOwnProperty","points","alltags","extractedkeywords","tags","split","tag","startsWith","forEach","aTag","arrayIdentityMap","Object","keys","map","splice","RelatedNews","news","allTags","allRelatedNews","console","log","length","style","display","item","index","padding","width","src","articleid","alt","title","to","excerpt","query","NewsTemplate","data","pageContext","allNewsEdges","useNewsList","useSiteMetadata","siteTitle","siteSubtitle","subtitle","author","source","dateadded","text","highlight","highlight2","url","image","comment","publishdate","keywords","metaDescription","Layout","description","Sidebar","isIndex","Page","href","join","target","previousid","nextid","float","module","exports","children","pageRef","useRef","useEffect","current","scrollIntoView","ref","className","styles","arrayFilter","baseFilter","baseIteratee","isArray","collection","predicate","baseEach","result","value","push"],"mappings":"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","file":"component---src-templates-news-template-js-40bafe1f2d28b5232327.js","sourcesContent":["// @flow strict\r\nimport { includes, orderBy, filter } from 'lodash'\r\n\r\n\r\nexport const getRelatedNews = (currentId, currentTags, allNews) => {\r\n\r\n    const maxPosts = 3;\r\n\r\n    // Don't include the current post in posts list\r\n    allNews = allNews.filter((post) => post.node.id !== currentId);\r\n\r\n    const identityMap = {};\r\n\r\n    //Map over all posts, add to map and add points\r\n    for (let post of allNews) {\r\n        const id = post.node.id;\r\n        if (!identityMap.hasOwnProperty(id)) {\r\n            identityMap[id] = {\r\n                post: post,\r\n                points: 0\r\n            }\r\n        }\r\n\r\n        // For tags matches, we add 1 point\r\n        let alltags = (post.node.extractedkeywords + \",\" + post.node.tags).split(\",\")\r\n        //filter out null, and all tags beginning with *\r\n        alltags = filter(alltags, tag => tag!=\"null\" && !tag.startsWith(\"*\"))\r\n        const tagPoint = 1;\r\n        alltags.forEach((aTag) => {\r\n            if (includes(currentTags, aTag)) {\r\n                identityMap[id].points += tagPoint;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    // Convert the identity map to an array\r\n    const arrayIdentityMap = Object.keys(identityMap).map((id) => identityMap[id]);\r\n\r\n    // Use a lodash utility function to sort them \r\n    // by points, from greatest to least\r\n    const similarNews = orderBy(\r\n        arrayIdentityMap, ['points'], ['desc']\r\n    )\r\n\r\n    //console.log(similarNews.splice(0, maxPosts))\r\n    // return the max number posts requested\r\n    return similarNews.splice(0, maxPosts);\r\n  \r\n};\r\n\r\nexport default getRelatedNews;\r\n","// @flow strict\r\nimport React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { getRelatedNews } from '../../utils/get-related-news';\r\n\r\nconst RelatedNews = ({ news, allTags, allNews }) => {\r\n\r\n    const allRelatedNews = (news && allNews) ? getRelatedNews(news.id, allTags, allNews) : [];\r\n\r\n    console.log(\"**** Render Related News\")\r\n    console.log(allRelatedNews)\r\n\r\n    return (\r\n        <>\r\n            {allRelatedNews && allRelatedNews.length > 0 &&\r\n                <>\r\n                    <h2>Related News</h2>\r\n                    <div style={{ display: \"table\" }}>\r\n                        {allRelatedNews.map((item,index) => (\r\n                            <div key={index} style={{ display: \"table-cell\", padding: \"1rem\", width: \"33%\" }}>\r\n                            <img src={'https://source.unsplash.com/1600x900/?abstract.'+ item.post.node.articleid} alt={item.post.node.title} />\r\n                            <Link to={`/links/${item.post.node.articleid}`}>\r\n                                {item.post.node.title && <h3>{item.post.node.title}</h3>}\r\n                            </Link>\r\n                            <div>{item.post.node.excerpt}</div>\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RelatedNews;\r\n","// @flow strict\r\nimport React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport Layout from '../components/Layout';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Page from '../components/Page';\r\nimport RelatedNews from '../components/RelatedNews';\r\nimport { useSiteMetadata, useNewsList } from '../hooks';\r\nimport _ from 'lodash';\r\n\r\nconst NewsTemplate = ({ data, pageContext }) => {\r\n  const allNewsEdges = useNewsList();\r\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\r\n  const { title, excerpt, articleid, author, source,text, dateadded, highlight, highlight2, url, tags,image,  comment, keywords, publishdate, extractedkeywords } = data.news;\r\n  const metaDescription = excerpt !== null ? excerpt : siteSubtitle;\r\n  let alltags = (extractedkeywords + \",\" + tags).split(\",\")\r\n  //filter out null, and all tags beginning with *\r\n  alltags = _.filter(alltags, tag => tag!=\"null\" && !tag.startsWith(\"*\"))\r\n  return (\r\n    <Layout title={`${title} - ${siteTitle}`} description={metaDescription} >\r\n      <Sidebar isIndex />\r\n\r\n      <Page title={title}>\r\n        <div>\r\n          <img src={image} alt={title} />\r\n        </div>\r\n        <div>\r\n          <h3><a href={url}>{title}</a></h3>\r\n          <p>{comment}</p>\r\n          By {author} at {source}<br/>\r\n          <blockquote>{highlight}</blockquote>\r\n          <blockquote>{highlight2}</blockquote>\r\n          article date: {publishdate}<br/>\r\n          posted: {dateadded}<br/>\r\n          Tags: {alltags.join(\",\")}\r\n          <p><a href={url} target=\"_blank\" >Read the original post &gt;</a></p>          \r\n        </div>\r\n        <div>\r\n          {pageContext.previousid && (\r\n              <Link to={`/links/${pageContext.previousid}`}>\r\n                  &lt; Previous Link\r\n              </Link>\r\n          )}\r\n          {pageContext.nextid && (\r\n              <Link to={`/links/${pageContext.nextid}`} style={{float: \"right\"}}>\r\n                  Next Link &gt;\r\n              </Link>\r\n          )}\r\n      </div>  \r\n      <RelatedNews news={data.news} allTags={alltags} allNews={allNewsEdges}/>\r\n      </Page>      \r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query NewsPost($id: String!) {\r\n    news: googleSheetLinksRow(id: { eq: $id }) {\r\n      articleid\r\n      author\r\n      dateadded\r\n      comment\r\n      excerpt\r\n      extractedkeywords\r\n      highlight\r\n      highlight2\r\n      images\r\n      image\r\n      id\r\n      keywords\r\n      publishdate\r\n      source\r\n      source2\r\n      tags\r\n      text\r\n      title\r\n      url\r\n      popularity\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewsTemplate;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page-module--page--V2155\",\"page__inner\":\"Page-module--page__inner--3xzwp\",\"page__title\":\"Page-module--page__title--t1zKX\",\"page__body\":\"Page-module--page__body--1A7TB\"};","import React, { useRef, useEffect } from 'react';\r\nimport styles from './Page.module.scss';\r\n\r\ntype Props = {\r\n  title?: string,\r\n  children: React.Node\r\n};\r\n\r\nconst Page = ({ title, children }: Props) => {\r\n  const pageRef = useRef();\r\n\r\n  useEffect(() => {\r\n    pageRef.current.scrollIntoView();\r\n  });\r\n\r\n  return (\r\n    <div ref={pageRef} className={styles['page']}>\r\n      <div className={styles['page__inner']}>\r\n        { title && <h1 className={styles['page__title']}>{title}</h1>}\r\n        <div className={styles['page__body']}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n"],"sourceRoot":""}